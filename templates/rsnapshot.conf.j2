# This file is managed by Ansible, don't make changes here,
# they will be overwritten.
#################################################
# rsnapshot.conf - rsnapshot configuration file #
#################################################
#                                               #
# PLEASE BE AWARE OF THE FOLLOWING RULE:       #
#                                               #
# This file requires tabs between elements      #
#                                               #
#################################################

#######################
# CONFIG FILE VERSION #
#######################

config_version	{{ rsnapshot_config_version }}

###########################
# SNAPSHOT ROOT DIRECTORY #
###########################

# All snapshots will be stored under this root directory.
#
snapshot_root	{{ rsnapshot_config_snapshot_root }}

# If no_create_root is enabled, rsnapshot will not automatically create the
# snapshot_root directory. This is particularly useful if you are backing
# up to removable media, such as a FireWire or USB drive.
#
no_create_root	{{ rsnapshot_config_no_create_root }}

#################################
# EXTERNAL PROGRAM DEPENDENCIES #
#################################

# LINUX USERS:   Be sure to uncomment "cmd_cp". This gives you extra features.
# EVERYONE ELSE: Leave "cmd_cp" commented out for compatibility.
#
# See the README file or the man page for more details.
#
cmd_cp		{{ rsnapshot_config_cmd_cp }}

# uncomment this to use the rm program instead of the built-in perl routine.
#
cmd_rm		{{ rsnapshot_config_cmd_rm }}

# rsync must be enabled for anything to work. This is the only command that
# must be enabled.
#
cmd_rsync	{%if rsnapshot_master_host_user_uses_sudo and rsnapshot_master_host_user != 'root' %}/usr/local/bin/rsync-wrapper.sh{%else%}{{ rsnapshot_config_cmd_rsync }}{%endif%}

# Uncomment this to enable remote ssh backups over rsync.
#
{% if rsnapshot_config_cmd_ssh %}
cmd_ssh	{{ rsnapshot_config_cmd_ssh }}
{% else %}
#cmd_ssh	/usr/bin/ssh
{% endif %}

# Comment this out to disable syslog support.
#
cmd_logger	{{ rsnapshot_config_cmd_logger }}

# Uncomment this to specify the path to "du" for disk usage checks.
# If you have an older version of "du", you may also want to check the
# "du_args" parameter below.
#
{% if rsnapshot_config_cmd_du %}
cmd_du		{{ rsnapshot_config_cmd_du }}
{% else %}
#cmd_du		/usr/bin/du
{% endif %}

# Uncomment this to specify the path to rsnapshot-diff.
#
{% if rsnapshot_config_cmd_rsnapshot_diff %}
cmd_rsnapshot_diff	{{ rsnapshot_config_cmd_rsnapshot_diff }}
{% else %}
#cmd_rsnapshot_diff	/usr/bin/rsnapshot-diff
{% endif %}

# Specify the path to a script (and any optional arguments) to run right
# before rsnapshot syncs files
#
{% if rsnapshot_config_cmd_preexec %}
cmd_preexec	{{ rsnapshot_config_cmd_preexec }}
{% else %}
#cmd_preexec	/path/to/preexec/script
{% endif %}

# Specify the path to a script (and any optional arguments) to run right
# after rsnapshot syncs files
#
{% if rsnapshot_config_cmd_postexec %}
cmd_postexec	{{ rsnapshot_config_cmd_postexec }}
{% else %}
#cmd_postexec	/path/to/postexec/script
{% endif %}

# Paths to lvcreate, lvremove, mount and umount commands, for use with
# Linux LVMs.
#
#linux_lvm_cmd_lvcreate	/sbin/lvcreate
#linux_lvm_cmd_lvremove	/sbin/lvremove
#linux_lvm_cmd_mount	/bin/mount
#linux_lvm_cmd_umount	/bin/umount

#########################################
#     BACKUP LEVELS / INTERVALS         #
# Must be unique and in ascending order #
# e.g. alpha, beta, gamma, etc.         #
#########################################

{% for interval in rsnapshot_config_intervals %}
retain		{{ interval.name }}	{{ interval.value }}
{% endfor %}

############################################
#              GLOBAL OPTIONS              #
# All are optional, with sensible defaults #
############################################

# Verbose level, 1 through 5.
# 1     Quiet           Print fatal errors only
# 2     Default         Print errors and warnings only
# 3     Verbose         Show equivalent shell commands being executed
# 4     Extra Verbose   Show extra verbose information
# 5     Debug mode      Everything
#
verbose		{{ rsnapshot_config_verbose }}

# Same as "verbose" above, but controls the amount of data sent to the
# logfile, if one is being used. The default is 3.
# If you want the rsync output, you have to set it to 4
#
loglevel	{{ rsnapshot_config_loglevel }}

# If you enable this, data will be written to the file you specify. The
# amount of data written is controlled by the "loglevel" parameter.
#
{% if rsnapshot_config_logfile %}
logfile	{{ rsnapshot_config_logfile }}
{% else %}
#logfile	/var/log/rsnapshot.log
{% endif %}

# If enabled, rsnapshot will write a lockfile to prevent two instances
# from running simultaneously (and messing up the snapshot_root).
# If you enable this, make sure the lockfile directory is not world
# writable. Otherwise anyone can prevent the program from running.
#
lockfile	{{ rsnapshot_config_lockfile }}

# By default, rsnapshot check lockfile, check if PID is running
# and if not, consider lockfile as stale, then start
# Enabling this stop rsnapshot if PID in lockfile is not running
#
{% if rsnapshot_config_stop_on_stale_lockfile %}
stop_on_stale_lockfile		{{ rsnapshot_config_stop_on_stale_lockfile }}
{% else %}
#stop_on_stale_lockfile		0
{% endif %}

# Default rsync args. All rsync commands have at least these options set.
#
{% if rsnapshot_config_rsync_short_args %}
rsync_short_args	{{ rsnapshot_config_rsync_short_args }}
{% else %}
#rsync_short_args	-a
{% endif %}
{% if rsnapshot_config_rsync_long_args %}
{% if rsnapshot_master_host_user == 'root' or rsnapshot_master_host_user_uses_sudo %}
rsync_long_args	{{ rsnapshot_config_rsync_long_args }}
{%else%}
rsync_long_args	{{ rsnapshot_config_rsync_long_args_not_root }}
{%endif%}
{% else %}
#rsync_long_args	--delete --numeric-ids --relative --delete-excluded
{% endif %}

# ssh has no args passed by default, but you can specify some here.
#
{% if rsnapshot_config_ssh_args %}
{% if rsnapshot_master_host_user == 'root' %}
ssh_args	{{ rsnapshot_config_ssh_args }}
{%else%}
ssh_args	{{ rsnapshot_config_ssh_args_not_root }}
{%endif%}
{% else %}
#ssh_args	-p 22
{% endif %}

# Default arguments for the "du" program (for disk space reporting).
# The GNU version of "du" is preferred. See the man page for more details.
# If your version of "du" doesn't support the -h flag, try -k flag instead.
#
{% if rsnapshot_config_du_args %}
du_args	{{ rsnapshot_config_du_args }}
{% else %}
#du_args	-csh
{% endif %}

# If this is enabled, rsync won't span filesystem partitions within a
# backup point. This essentially passes the -x option to rsync.
# The default is 0 (off).
#
{% if rsnapshot_config_one_fs %}
one_fs	{{ rsnapshot_config_one_fs }}
{% else %}
#one_fs		0
{% endif %}

# The include and exclude parameters, if enabled, simply get passed directly
# to rsync. If you have multiple include/exclude patterns, put each one on a
# separate line. Please look up the --include and --exclude options in the
# rsync man page for more details on how to specify file name patterns. 
# 
#include	???
#include	???
#exclude	???
#exclude	???
{% for include in rsnapshot_config_include %}
include		{{ include }}
{% endfor %}
{% for exclude in rsnapshot_config_exclude %}
exclude		{{ exclude }}
{% endfor %}

# The include_file and exclude_file parameters, if enabled, simply get
# passed directly to rsync. Please look up the --include-from and
# --exclude-from options in the rsync man page for more details.
#
{% if rsnapshot_config_include_file %}
include_file	{{ rsnapshot_config_include_file }}
{% else %}
#include_file	/path/to/include/file
{% endif %}
{% if rsnapshot_config_exclude_file %}
exclude_file	{{ rsnapshot_config_exclude_file }}
{% else %}
#exclude_file	/path/to/exclude/file
{% endif %}

# If your version of rsync supports --link-dest, consider enabling this.
# This is the best way to support special files (FIFOs, etc) cross-platform.
# The default is 0 (off).
#
{% if rsnapshot_config_link_dest %}
link_dest	{{ rsnapshot_config_link_dest }}
{% else %}
#link_dest	0
{% endif %}

# When sync_first is enabled, it changes the default behaviour of rsnapshot.
# Normally, when rsnapshot is called with its lowest interval
# (i.e.: "rsnapshot alpha"), it will sync files AND rotate the lowest
# intervals. With sync_first enabled, "rsnapshot sync" handles the file sync,
# and all interval calls simply rotate files. See the man page for more
# details. The default is 0 (off).
#
{% if rsnapshot_config_sync_first %}
sync_first	{{ rsnapshot_config_sync_first }}
{% else %}
#sync_first	0
{% endif %}

# If enabled, rsnapshot will move the oldest directory for each interval
# to [interval_name].delete, then it will remove the lockfile and delete
# that directory just before it exits. The default is 0 (off).
#
{% if rsnapshot_config_use_lazy_deletes %}
use_lazy_deletes	{{ rsnapshot_config_use_lazy_deletes }}
{% else %}
#use_lazy_deletes	0
{% endif %}

# Number of rsync re-tries. If you experience any network problems or
# network card issues that tend to cause ssh to fail with errors like
# "Corrupted MAC on input", for example, set this to a non-zero value
# to have the rsync operation re-tried.
#
{% if rsnapshot_config_rsync_numtries %}
rsync_numtries	{{ rsnapshot_config_rsync_numtries }}
{% else %}
#rsync_numtries	0
{% endif %}

# LVM parameters. Used to backup with creating lvm snapshot before backup
# and removing it after. This should ensure consistency of data in some special
# cases
#
# LVM snapshot(s) size (lvcreate --size option).
#
#linux_lvm_snapshotsize	100M

# Name to be used when creating the LVM logical volume snapshot(s).
#
#linux_lvm_snapshotname	rsnapshot

# Path to the LVM Volume Groups.
#
#linux_lvm_vgpath	/dev

# Mount point to use to temporarily mount the snapshot(s).
#
#linux_lvm_mountpath	/path/to/mount/lvm/snapshot/during/backup

###############################
### BACKUP POINTS / SCRIPTS ###
###############################

{% for backup in rsnapshot_config_backup %}
# {{ backup.name }}
{% for args in backup.points %}
{{ '\t'.join(args) }}
{% endfor %}

{% endfor %}
